package org.md2k.mcerebrum.core.access.configinfo;

// @formatter:off
import java.util.Date;

import android.database.Cursor;
import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

import org.md2k.mcerebrum.core.access.base.AbstractCursor;

/**
 * Config ContentProvider Cursor class.
 * This class is auto-generated by Android ContentProvider Generator.
 * For more information see <a href="https://github.com/BoD/android-contentprovider-generator">GitHub</a>.
 */
@SuppressWarnings({"WeakerAccess", "unused", "UnnecessaryLocalVariable"})
public class ConfigInfoCursor extends AbstractCursor implements ConfigInfoModel {
    public ConfigInfoCursor(Cursor cursor) {
        super(cursor);
    }

    @Override
    public long getId() {
        Long res = getLongOrNull(ConfigInfoColumns._ID);
        if (res == null)
            throw new NullPointerException("The value of '_id' in the database was null, which is not allowed according to the model definition");
        return res;
    }

    @Nullable
    @Override
    public String getCid() {
        String res = getStringOrNull(ConfigInfoColumns.CID);
        return res;
    }

    @Nullable
    @Override
    public String getType() {
        String res = getStringOrNull(ConfigInfoColumns.TYPE);
        return res;
    }

    @Nullable
    @Override
    public String getTitle() {
        String res = getStringOrNull(ConfigInfoColumns.TITLE);
        return res;
    }

    @Nullable
    @Override
    public String getSummary() {
        String res = getStringOrNull(ConfigInfoColumns.SUMMARY);
        return res;
    }

    @Nullable
    @Override
    public String getDescription() {
        String res = getStringOrNull(ConfigInfoColumns.DESCRIPTION);
        return res;
    }

    @Nullable
    @Override
    public String getVersions() {
        String res = getStringOrNull(ConfigInfoColumns.VERSIONS);
        return res;
    }

    @Nullable
    @Override
    public String getUpdates() {
        String res = getStringOrNull(ConfigInfoColumns.UPDATES);
        return res;
    }

    @Nullable
    @Override
    public String getExpectedVersion() {
        String res = getStringOrNull(ConfigInfoColumns.EXPECTED_VERSION);
        return res;
    }

    @Nullable
    @Override
    public String getLatestVersion() {
        String res = getStringOrNull(ConfigInfoColumns.LATEST_VERSION);
        return res;
    }

    @Nullable
    @Override
    public String getDownloadFrom() {
        String res = getStringOrNull(ConfigInfoColumns.DOWNLOAD_FROM);
        return res;
    }

    @Nullable
    @Override
    public String getDownloadLink() {
        String res = getStringOrNull(ConfigInfoColumns.DOWNLOAD_LINK);
        return res;
    }
}
