package org.md2k.mcerebrum.core.access.userinfo;

import org.md2k.mcerebrum.core.access.base.BaseModel;

import java.util.Date;

import android.support.annotation.NonNull;
import android.support.annotation.Nullable;

/**
 * User ContentProvider Bean class.
 * This class is auto-generated by Android ContentProvider Generator.
 * For more information see <a href="https://github.com/BoD/android-contentprovider-generator">GitHub</a>.
 */
@SuppressWarnings({"WeakerAccess", "unused", "ConstantConditions"})
public class UserInfoBean implements UserInfoModel {
    private long mId;
    private String mUid;
    private String mType;
    private String mUsername;

    @Override
    public long getId() {
        return mId;
    }

    public void setId(long id) {
        mId = id;
    }

    @Nullable
    @Override
    public String getUid() {
        return mUid;
    }

    public void setUid(@Nullable String uid) {
        mUid = uid;
    }

    @Nullable
    @Override
    public String getType() {
        return mType;
    }

    public void setType(@Nullable String type) {
        mType = type;
    }

    @Nullable
    @Override
    public String getUsername() {
        return mUsername;
    }

    public void setUsername(@Nullable String username) {
        mUsername = username;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o)
            return true;
        if (o == null || getClass() != o.getClass())
            return false;
        UserInfoBean bean = (UserInfoBean) o;
        return mId == bean.mId;
    }

    @Override
    public int hashCode() {
        return (int) (mId ^ (mId >>> 32));
    }

    @NonNull
    public static UserInfoBean newInstance(long id, @Nullable String uid, @Nullable String type, @Nullable String username) {
        UserInfoBean res = new UserInfoBean();
        res.mId = id;
        res.mUid = uid;
        res.mType = type;
        res.mUsername = username;
        return res;
    }

    @NonNull
    public static UserInfoBean copy(@NonNull UserInfoModel from) {
        UserInfoBean res = new UserInfoBean();
        res.mId = from.getId();
        res.mUid = from.getUid();
        res.mType = from.getType();
        res.mUsername = from.getUsername();
        return res;
    }

    public static class Builder {

        private UserInfoBean mRes = new UserInfoBean();

        public Builder id(long id) {
            mRes.mId = id;
            return this;
        }

        public Builder uid(@Nullable String uid) {
            mRes.mUid = uid;
            return this;
        }

        public Builder type(@Nullable String type) {
            mRes.mType = type;
            return this;
        }

        public Builder username(@Nullable String username) {
            mRes.mUsername = username;
            return this;
        }

        public UserInfoBean build() {
            return mRes;
        }
    }

    public static Builder newBuilder() {
        return new Builder();
    }
}
